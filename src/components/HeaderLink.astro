---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;


const hrefString = typeof href === 'string' ? href : href?.toString() || '';
const currentPath = Astro.url.pathname;

const isActive = currentPath === hrefString || currentPath.startsWith(hrefString + '/');
---

<a class="text-[var(--black)]" href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		padding: 0.2em 0.2em;
		color: var(--black);
		border-bottom: 4px solid transparent;
		text-decoration: none;
	}
	a.active {
		text-decoration: none;
		font-weight: bolder;
		border-bottom-color: var(--accent);
	}
</style>
